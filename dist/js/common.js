function getUrlVars(){for(var i,o=[],t=window.location.href.slice(window.location.href.indexOf("?")+1).split("&"),n=0;n<t.length;n++)i=t[n].split("="),o.push(i[0]),o[i[0]]=i[1];return o}$(document).ready(function(){function i(){a.time-=1,t(!0,"count1"),setTimeout(function(){0==a.time?(t(!0,"count2"),n.emit("start",{width:a.mainImg.width()})):i()},1e3)}function o(i){i?$(".loading").addClass("on").fadeIn():$(".loading").removeClass("on").fadeOut()}function t(i,o){if(i)try{$("#"+o)[0].play()}catch(t){}else try{$("#"+o)[0].pause()}catch(t){}}var n=io("http://lab.medialand.com.tw",{path:"/andy/socket.io"}),a={wrapper:$(".wraper"),mainImg:$(".mainImg"),word:$(".wrapper .word"),ml:0,time:3};n.on("ioAlert",function(i){console.log(i.msg),n.emit("userData",{h:$(window).height(),w:$(window).width()})}),n.on("imgReady",function(i){a.mainImgUrl=i.url,o(!0),$(".step1").fadeOut(),a.mainImg.attr("src",a.mainImgUrl).on("load",function(){o(!1),n.emit("imgGo")}).each(function(){this.complete&&$(this).load()})}),n.on("imgGo",function(i){a.word.addClass("on"),console.log(i),a.ml=$(window).width()+i.ml,a.mainImg.css({height:i.h,width:"auto",top:i.y,left:a.ml})}),n.on("imgMove",function(i){a.mainImg.animate({left:i.d*-1},3e3)}),n.on("reload",function(i){location.reload()}),$(".submit").click(function(){n.emit("imgReady",{url:$(".imgUrl").val()})}),$(".wrapper .word").click(function(){a.word.hide(),i()}),$(window).load(function(){o(!1),$("audio").each(function(i,o){$(o).get(0).play()}),setTimeout(function(){$("audio").each(function(i,o){if("button"!=$(o).prop("id")){var t=$(o).get(0);t.pause(),t.muted=!1}})},300)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyJdLCJuYW1lcyI6WyJnZXRVcmxWYXJzIiwiaGFzaCIsInZhcnMiLCJoYXNoZXMiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJzbGljZSIsImluZGV4T2YiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJwdXNoIiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJjb3VudCIsIm8iLCJ0aW1lIiwicGxheVNvdW5kIiwic2V0VGltZW91dCIsInNvY2tldCIsImVtaXQiLCJ3aWR0aCIsIm1haW5JbWciLCJzaG93TG9hZGluZyIsIl90IiwiYWRkQ2xhc3MiLCJmYWRlSW4iLCJyZW1vdmVDbGFzcyIsImZhZGVPdXQiLCJfdHh0IiwicGxheSIsImVyciIsInBhdXNlIiwiaW8iLCJwYXRoIiwid3JhcHBlciIsIndvcmQiLCJtbCIsIm9uIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJtc2ciLCJoIiwiaGVpZ2h0IiwidyIsIm1haW5JbWdVcmwiLCJ1cmwiLCJhdHRyIiwiZWFjaCIsInRoaXMiLCJjb21wbGV0ZSIsImxvYWQiLCJjc3MiLCJ0b3AiLCJ5IiwibGVmdCIsImFuaW1hdGUiLCJkIiwicmVsb2FkIiwiY2xpY2siLCJ2YWwiLCJoaWRlIiwiZSIsImdldCIsInByb3AiLCJhdWRpbyIsIm11dGVkIl0sIm1hcHBpbmdzIjoiQUE0RkEsUUFBU0EsY0FFTCxJQUFJLEdBRFFDLEdBQVJDLEtBQWlCQyxFQUFPQyxPQUFPQyxTQUFTQyxLQUFLQyxNQUFNSCxPQUFPQyxTQUFTQyxLQUFLRSxRQUFRLEtBQUssR0FBR0MsTUFBTSxLQUMxRkMsRUFBRSxFQUFFQSxFQUFFUCxFQUFPUSxPQUFPRCxJQUFLVCxFQUFLRSxFQUFPTyxHQUFHRCxNQUFNLEtBQUtQLEVBQUtVLEtBQUtYLEVBQUssSUFBSUMsRUFBS0QsRUFBSyxJQUFJQSxFQUFLLEVBQ2pHLE9BQU9DLEdBL0ZYVyxFQUFFQyxVQUFVQyxNQUFNLFdBcUVkLFFBQVNDLEtBQ0xDLEVBQUVDLE1BQU0sRUFDUkMsR0FBVSxFQUFLLFVBQ2ZDLFdBQVcsV0FDSSxHQUFSSCxFQUFFQyxNQUNEQyxHQUFVLEVBQUssVUFDZkUsRUFBT0MsS0FBSyxTQUFTQyxNQUFNTixFQUFFTyxRQUFRRCxXQUNuQ1AsS0FDUixLQUVOLFFBQVNTLEdBQVlDLEdBQ2RBLEVBQUliLEVBQUUsWUFBWWMsU0FBUyxNQUFNQyxTQUMvQmYsRUFBRSxZQUFZZ0IsWUFBWSxNQUFNQyxVQUV6QyxRQUFTWCxHQUFVTyxFQUFHSyxHQUNsQixHQUFHTCxFQUNDLElBQUliLEVBQUUsSUFBSWtCLEdBQU0sR0FBR0MsT0FBUSxNQUFNQyxRQUVqQyxLQUFJcEIsRUFBRSxJQUFJa0IsR0FBTSxHQUFHRyxRQUFTLE1BQU1ELEtBdEYxQyxHQUFJWixHQUFTYyxHQUFHLCtCQUFnQ0MsS0FBSyxvQkFDakRuQixHQUNBb0IsUUFBUXhCLEVBQUUsV0FDVlcsUUFBU1gsRUFBRSxZQUNYeUIsS0FBS3pCLEVBQUUsa0JBQ1AwQixHQUFHLEVBQ0hyQixLQUFLLEVBS1RHLEdBQU9tQixHQUFHLFVBQVUsU0FBU0MsR0FDekJDLFFBQVFDLElBQUlGLEVBQUtHLEtBQ2pCdkIsRUFBT0MsS0FBSyxZQUFhdUIsRUFBRWhDLEVBQUVULFFBQVEwQyxTQUFTQyxFQUFFbEMsRUFBRVQsUUFBUW1CLFlBRTlERixFQUFPbUIsR0FBRyxXQUFZLFNBQVNDLEdBQzNCeEIsRUFBRStCLFdBQWFQLEVBQUtRLElBQ3BCeEIsR0FBWSxHQUNaWixFQUFFLFVBQVVpQixVQUNaYixFQUFFTyxRQUFRMEIsS0FBSyxNQUFNakMsRUFBRStCLFlBQVlSLEdBQUcsT0FBTyxXQUN6Q2YsR0FBWSxHQUNaSixFQUFPQyxLQUFLLFdBQ2I2QixLQUFLLFdBQ0RDLEtBQUtDLFVBQVV4QyxFQUFFdUMsTUFBTUUsV0FHbENqQyxFQUFPbUIsR0FBRyxRQUFRLFNBQVNDLEdBQ3ZCeEIsRUFBRXFCLEtBQUtYLFNBQVMsTUFDaEJlLFFBQVFDLElBQUlGLEdBQ1p4QixFQUFFc0IsR0FBSzFCLEVBQUVULFFBQVFtQixRQUFVa0IsRUFBS0YsR0FDaEN0QixFQUFFTyxRQUNEK0IsS0FDR1QsT0FBVUwsRUFBS0ksRUFDZnRCLE1BQVMsT0FDVGlDLElBQU9mLEVBQUtnQixFQUNaQyxLQUFRekMsRUFBRXNCLE9BR2xCbEIsRUFBT21CLEdBQUcsVUFBVSxTQUFTQyxHQUN6QnhCLEVBQUVPLFFBQVFtQyxTQUFTRCxLQUFRakIsRUFBS21CLE1BQU0sT0FFMUN2QyxFQUFPbUIsR0FBRyxTQUFTLFNBQVNDLEdBQ3hCcEMsU0FBU3dELFdBSWJoRCxFQUFFLFdBQVdpRCxNQUFNLFdBQ2Z6QyxFQUFPQyxLQUFLLFlBQVkyQixJQUFJcEMsRUFBRSxXQUFXa0QsVUFFN0NsRCxFQUFFLGtCQUFrQmlELE1BQU0sV0FDdEI3QyxFQUFFcUIsS0FBSzBCLE9BQ1BoRCxNQUVKSCxFQUFFVCxRQUFRa0QsS0FBSyxXQUNYN0IsR0FBWSxHQUNaWixFQUFFLFNBQVNzQyxLQUFLLFNBQVN6QyxFQUFHdUQsR0FDeEJwRCxFQUFFb0QsR0FBR0MsSUFBSSxHQUFHbEMsU0FFaEJaLFdBQVcsV0FDUFAsRUFBRSxTQUFTc0MsS0FBSyxTQUFTekMsRUFBR3VELEdBQ3hCLEdBQXNCLFVBQW5CcEQsRUFBRW9ELEdBQUdFLEtBQUssTUFBYixDQUNBLEdBQUlDLEdBQVF2RCxFQUFFb0QsR0FBR0MsSUFBSSxFQUNyQkUsR0FBTWxDLFFBQ05rQyxFQUFNQyxPQUFRLE1BRW5CIiwiZmlsZSI6ImNvbW1vbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc29ja2V0ID0gaW8oJ2h0dHA6Ly9sYWIubWVkaWFsYW5kLmNvbS50dycsIHtwYXRoOicvYW5keS9zb2NrZXQuaW8nfSk7XHJcbiAgICB2YXIgbz17XHJcbiAgICAgICAgd3JhcHBlcjokKCcud3JhcGVyJyksXHJcbiAgICAgICAgbWFpbkltZzogJCgnLm1haW5JbWcnKSxcclxuICAgICAgICB3b3JkOiQoJy53cmFwcGVyIC53b3JkJyksXHJcbiAgICAgICAgbWw6MCxcclxuICAgICAgICB0aW1lOjNcclxuICAgIH07XHJcblxyXG5cclxuICAgIC8vc29ja2V0XHJcbiAgICBzb2NrZXQub24oJ2lvQWxlcnQnLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEubXNnKTtcclxuICAgICAgICBzb2NrZXQuZW1pdCgndXNlckRhdGEnLHsgaDokKHdpbmRvdykuaGVpZ2h0KCksdzokKHdpbmRvdykud2lkdGgoKSB9KTtcclxuICAgIH0pO1xyXG4gICAgc29ja2V0Lm9uKCdpbWdSZWFkeScsIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIG8ubWFpbkltZ1VybCA9IGRhdGEudXJsO1xyXG4gICAgICAgIHNob3dMb2FkaW5nKHRydWUpO1xyXG4gICAgICAgICQoJy5zdGVwMScpLmZhZGVPdXQoKTtcclxuICAgICAgICBvLm1haW5JbWcuYXR0cignc3JjJyxvLm1haW5JbWdVcmwpLm9uKCdsb2FkJyxmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBzaG93TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgICAgIHNvY2tldC5lbWl0KCdpbWdHbycpO1xyXG4gICAgICAgIH0pLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuY29tcGxldGUpICQodGhpcykubG9hZCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQub24oJ2ltZ0dvJyxmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBvLndvcmQuYWRkQ2xhc3MoJ29uJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICAgICAgby5tbCA9ICQod2luZG93KS53aWR0aCgpICsgZGF0YS5tbDtcclxuICAgICAgICBvLm1haW5JbWdcclxuICAgICAgICAuY3NzKHtcclxuICAgICAgICAgICAgJ2hlaWdodCc6IGRhdGEuaCxcclxuICAgICAgICAgICAgJ3dpZHRoJzogJ2F1dG8nLFxyXG4gICAgICAgICAgICAndG9wJzogZGF0YS55LFxyXG4gICAgICAgICAgICAnbGVmdCc6IG8ubWxcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgc29ja2V0Lm9uKCdpbWdNb3ZlJyxmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBvLm1haW5JbWcuYW5pbWF0ZSh7J2xlZnQnOiBkYXRhLmQqLTF9LDMwMDApO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQub24oJ3JlbG9hZCcsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL2pzXHJcbiAgICAkKCcuc3VibWl0JykuY2xpY2soZnVuY3Rpb24oKXtcclxuICAgICAgICBzb2NrZXQuZW1pdCgnaW1nUmVhZHknLHt1cmw6JCgnLmltZ1VybCcpLnZhbCgpfSk7XHJcbiAgICB9KTtcclxuICAgICQoJy53cmFwcGVyIC53b3JkJykuY2xpY2soZnVuY3Rpb24oKXtcclxuICAgICAgICBvLndvcmQuaGlkZSgpO1xyXG4gICAgICAgIGNvdW50KCk7XHJcbiAgICB9KTtcclxuICAgICQod2luZG93KS5sb2FkKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc2hvd0xvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICQoXCJhdWRpb1wiKS5lYWNoKGZ1bmN0aW9uKGksIGUpe1xyXG4gICAgICAgICAgICAkKGUpLmdldCgwKS5wbGF5KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJChcImF1ZGlvXCIpLmVhY2goZnVuY3Rpb24oaSwgZSl7XHJcbiAgICAgICAgICAgICAgICBpZigkKGUpLnByb3AoJ2lkJykgPT0gJ2J1dHRvbicpIHJldHVybjtcclxuICAgICAgICAgICAgICAgIHZhciBhdWRpbyA9ICQoZSkuZ2V0KDApO1xyXG4gICAgICAgICAgICAgICAgYXVkaW8ucGF1c2UoKTtcclxuICAgICAgICAgICAgICAgIGF1ZGlvLm11dGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sIDMwMCk7XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gY291bnQoKXtcclxuICAgICAgICBvLnRpbWUtPTE7XHJcbiAgICAgICAgcGxheVNvdW5kKHRydWUsJ2NvdW50MScpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgaWYoby50aW1lPT0wKXtcclxuICAgICAgICAgICAgICAgIHBsYXlTb3VuZCh0cnVlLCdjb3VudDInKTtcclxuICAgICAgICAgICAgICAgIHNvY2tldC5lbWl0KCdzdGFydCcse3dpZHRoOm8ubWFpbkltZy53aWR0aCgpfSk7XHJcbiAgICAgICAgICAgIH1lbHNlIGNvdW50KCk7XHJcbiAgICAgICAgfSwxMDAwKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNob3dMb2FkaW5nKF90KXtcclxuICAgICAgICBpZihfdCkgJCgnLmxvYWRpbmcnKS5hZGRDbGFzcygnb24nKS5mYWRlSW4oKTtcclxuICAgICAgICBlbHNlICQoJy5sb2FkaW5nJykucmVtb3ZlQ2xhc3MoJ29uJykuZmFkZU91dCgpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcGxheVNvdW5kKF90LF90eHQpe1xyXG4gICAgICAgIGlmKF90KXtcclxuICAgICAgICAgICAgdHJ5eyQoXCIjXCIrX3R4dClbMF0ucGxheSgpO31jYXRjaChlcnIpe31cclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdHJ5eyQoXCIjXCIrX3R4dClbMF0ucGF1c2UoKTt9Y2F0Y2goZXJyKXt9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSkvL3JlYWR5IGVuZFxyXG5mdW5jdGlvbiBnZXRVcmxWYXJzKCl7XHJcbiAgICB2YXIgdmFycz1bXSxoYXNoO3ZhciBoYXNoZXM9d2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignPycpKzEpLnNwbGl0KCcmJyk7XHJcbiAgICBmb3IodmFyIGk9MDtpPGhhc2hlcy5sZW5ndGg7aSsrKXtoYXNoPWhhc2hlc1tpXS5zcGxpdCgnPScpO3ZhcnMucHVzaChoYXNoWzBdKTt2YXJzW2hhc2hbMF1dPWhhc2hbMV19XHJcbiAgICByZXR1cm4gdmFyc1xyXG59XHJcbiJdfQ==
