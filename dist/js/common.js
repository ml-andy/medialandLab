function getUrlVars(){for(var n,i=[],t=window.location.href.slice(window.location.href.indexOf("?")+1).split("&"),o=0;o<t.length;o++)n=t[o].split("="),i.push(n[0]),i[n[0]]=n[1];return i}$(document).ready(function(){function n(n){n?$(".loading").addClass("on").fadeIn():$(".loading").removeClass("on").fadeOut()}function i(n,i){if(n)try{$("#"+i)[0].play()}catch(t){}else try{$("#"+i)[0].pause()}catch(t){}}function t(){m.hasToHide.show(),$(".step3").hide()}function o(){$(".step3").fadeOut(),$(".step1").fadeIn()}function a(){m.humanWalkStep-=1,setTimeout(function(){m.humanWalkStep>0&&(a(),i(!0,"count1"))},500)}var e=io("http://lab.medialand.com.tw",{path:"/andy/socket.io"}),m={wrapper:$(".wraper"),mainImg:$(".mainImg"),word:$(".wrapper .word"),hasToHide:$(".hasToHide"),ml:0,num:0,time:1};e.on("ioAlert",function(n){console.log(n.msg),e.emit("userData",{h:$(window).height(),w:$(window).width()})}),e.on("imgReady",function(i){m.mainImgUrl=i.url,m.num=i.num,$(".step2 .number").html(m.num),t(),n(!0),$(".step1").fadeOut(),m.mainImg.attr("src",m.mainImgUrl).on("load",function(){n(!1),e.emit("imgGo")}).each(function(){this.complete&&$(this).load()})}),e.on("imgGo",function(n){m.word.addClass("on"),m.ml=$(window).width()+n.ml,m.mainImg.css({height:n.h,width:"auto",top:n.y,left:m.ml})}),e.on("countToGo",function(n){m.hasToHide.hide(),setTimeout(function(){i(!0,"count1"),m.num==n.num&&e.emit("start",{width:m.mainImg.width()})},1e3)}),e.on("imgMove",function(n){m.humanWalkDis=n.d/56,m.humanWalkStep=Math.ceil(m.humanWalkDis/25),m.imgMoveTime=Math.floor(20*m.humanWalkDis),a(),m.mainImg.animate({left:n.d*-1},m.imgMoveTime,function(){e.emit("finish")})}),e.on("finish",function(){$(".step3").fadeIn()}),$(window).load(function(){n(!1),$("audio").each(function(n,i){$(i).get(0).play()}),setTimeout(function(){$("audio").each(function(n,i){if("button"!=$(i).prop("id")){var t=$(i).get(0);t.pause(),t.muted=!1}})},300)}),$(".submit").click(function(){i(!0,"count1"),e.emit("imgReady",{url:$(".imgUrl").val()})}),$(".wrapper .word").click(function(){e.emit("countToGo")}),$(".back").click(o),$(".again").click(function(){e.emit("imgReady",{url:$(".imgUrl").val()})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyJdLCJuYW1lcyI6WyJnZXRVcmxWYXJzIiwiaGFzaCIsInZhcnMiLCJoYXNoZXMiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJzbGljZSIsImluZGV4T2YiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJwdXNoIiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJzaG93TG9hZGluZyIsIl90IiwiYWRkQ2xhc3MiLCJmYWRlSW4iLCJyZW1vdmVDbGFzcyIsImZhZGVPdXQiLCJwbGF5U291bmQiLCJfdHh0IiwicGxheSIsImVyciIsInBhdXNlIiwiaW5pdFRvU3RhcnQiLCJvIiwiaGFzVG9IaWRlIiwic2hvdyIsImhpZGUiLCJpbml0IiwiY291bnRTdGVwIiwiaHVtYW5XYWxrU3RlcCIsInNldFRpbWVvdXQiLCJzb2NrZXQiLCJpbyIsInBhdGgiLCJ3cmFwcGVyIiwibWFpbkltZyIsIndvcmQiLCJtbCIsIm51bSIsInRpbWUiLCJvbiIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwibXNnIiwiZW1pdCIsImgiLCJoZWlnaHQiLCJ3Iiwid2lkdGgiLCJtYWluSW1nVXJsIiwidXJsIiwiaHRtbCIsImF0dHIiLCJlYWNoIiwidGhpcyIsImNvbXBsZXRlIiwibG9hZCIsImNzcyIsInRvcCIsInkiLCJsZWZ0IiwiaHVtYW5XYWxrRGlzIiwiZCIsIk1hdGgiLCJjZWlsIiwiaW1nTW92ZVRpbWUiLCJmbG9vciIsImFuaW1hdGUiLCJlIiwiZ2V0IiwicHJvcCIsImF1ZGlvIiwibXV0ZWQiLCJjbGljayIsInZhbCJdLCJtYXBwaW5ncyI6IkFBbUpBLFFBQVNBLGNBRUwsSUFBSSxHQURRQyxHQUFSQyxLQUFpQkMsRUFBT0MsT0FBT0MsU0FBU0MsS0FBS0MsTUFBTUgsT0FBT0MsU0FBU0MsS0FBS0UsUUFBUSxLQUFLLEdBQUdDLE1BQU0sS0FDMUZDLEVBQUUsRUFBRUEsRUFBRVAsRUFBT1EsT0FBT0QsSUFBS1QsRUFBS0UsRUFBT08sR0FBR0QsTUFBTSxLQUFLUCxF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QUdnRSxHQUN4QixHQUFzQixVQUFuQjdELEVBQUU2RCxHQUFHRSxLQUFLLE1BQWIsQ0FDQSxHQUFJQyxHQUFRaEUsRUFBRTZELEdBQUdDLElBQUksRUFDckJFLEdBQU1uRCxRQUNObUQsRUFBTUMsT0FBUSxNQUVuQixPQUVQakUsRUFBRSxXQUFXa0UsTUFBTSxXQUNmekQsR0FBVSxFQUFLLFVBQ2ZjLEVBQU9jLEtBQUssWUFBWU0sSUFBSTNDLEVBQUUsV0FBV21FLFVBRTdDbkUsRUFBRSxrQkFBa0JrRSxNQUFNLFdBQ3RCM0MsRUFBT2MsS0FBSyxlQUVoQnJDLEVBQUUsU0FBU2tFLE1BQU0vQyxHQUNqQm5CLEVBQUUsVUFBVWtFLE1BQU0sV0FDZDNDLEVBQU9jLEtBQUssWUFBWU0sSUFBSTNDLEVBQUUsV0FBV21FIiwiZmlsZSI6ImNvbW1vbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XHJcblxyXG4vKlxyXG4gX18gIC5fXyAgIF9fLiAgX18gIC5fX19fX19fX19fXy5cclxufCAgfCB8ICBcXCB8ICB8IHwgIHwgfCAgICAgICAgICAgfFxyXG58ICB8IHwgICBcXHwgIHwgfCAgfCBgLS0tfCAgfC0tLS1gXHJcbnwgIHwgfCAgLiBgICB8IHwgIHwgICAgIHwgIHwgICAgIFxyXG58ICB8IHwgIHxcXCAgIHwgfCAgfCAgICAgfCAgfCAgICAgXHJcbnxfX3wgfF9ffCBcXF9ffCB8X198ICAgICB8X198ICAgICBcclxuXHJcbiovXHJcbiAgICB2YXIgc29ja2V0ID0gaW8oJ2h0dHA6Ly9sYWIubWVkaWFsYW5kLmNvbS50dycsIHtwYXRoOicvYW5keS9zb2NrZXQuaW8nfSk7XHJcbiAgICB2YXIgbz17XHJcbiAgICAgICAgd3JhcHBlcjokKCcud3JhcGVyJyksXHJcbiAgICAgICAgbWFpbkltZzogJCgnLm1haW5JbWcnKSxcclxuICAgICAgICB3b3JkOiQoJy53cmFwcGVyIC53b3JkJyksXHJcbiAgICAgICAgaGFzVG9IaWRlOiQoJy5oYXNUb0hpZGUnKSxcclxuICAgICAgICBtbDowLFxyXG4gICAgICAgIG51bTowLFxyXG4gICAgICAgIHRpbWU6MVxyXG4gICAgfTtcclxuXHJcblxyXG4vKiAgIF9fX19fX18uICBfX19fX18gICAgIF9fX19fXyAgX18gIF9fXyAgX19fX19fXyAuX19fX19fX19fX18uXHJcbiAgICAvICAgICAgIHwgLyAgX18gIFxcICAgLyAgICAgIHx8ICB8LyAgLyB8ICAgX19fX3x8ICAgICAgICAgICB8XHJcbiAgIHwgICAoLS0tLWB8ICB8ICB8ICB8IHwgICwtLS0tJ3wgICcgIC8gIHwgIHxfXyAgIGAtLS18ICB8LS0tLWBcclxuICAgIFxcICAgXFwgICAgfCAgfCAgfCAgfCB8ICB8ICAgICB8ICAgIDwgICB8ICAgX198ICAgICAgfCAgfCAgICAgXHJcbi4tLS0tKSAgIHwgICB8ICBgLS0nICB8IHwgIGAtLS0tLnwgIC4gIFxcICB8ICB8X19fXyAgICAgfCAgfCAgICAgXHJcbnxfX19fX19fLyAgICAgXFxfX19fX18vICAgXFxfX19fX198fF9ffFxcX19cXCB8X19fX19fX3wgICAgfF9ffCAgICBcclxuKi9cclxuICAgIHNvY2tldC5vbignaW9BbGVydCcsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coZGF0YS5tc2cpO1xyXG4gICAgICAgIHNvY2tldC5lbWl0KCd1c2VyRGF0YScseyBoOiQod2luZG93KS5oZWlnaHQoKSx3OiQod2luZG93KS53aWR0aCgpIH0pO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQub24oJ2ltZ1JlYWR5JywgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgby5tYWluSW1nVXJsID0gZGF0YS51cmw7XHJcbiAgICAgICAgby5udW0gPSBkYXRhLm51bTtcclxuICAgICAgICAkKCcuc3RlcDIgLm51bWJlcicpLmh0bWwoby5udW0pO1xyXG4gICAgICAgIGluaXRUb1N0YXJ0KCk7XHJcbiAgICAgICAgc2hvd0xvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgJCgnLnN0ZXAxJykuZmFkZU91dCgpO1xyXG4gICAgICAgIG8ubWFpbkltZy5hdHRyKCdzcmMnLG8ubWFpbkltZ1VybCkub24oJ2xvYWQnLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIHNob3dMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICAgICAgc29ja2V0LmVtaXQoJ2ltZ0dvJyk7XHJcbiAgICAgICAgfSkuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5jb21wbGV0ZSkgJCh0aGlzKS5sb2FkKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIHNvY2tldC5vbignaW1nR28nLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIG8ud29yZC5hZGRDbGFzcygnb24nKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICBvLm1sID0gJCh3aW5kb3cpLndpZHRoKCkgKyBkYXRhLm1sO1xyXG4gICAgICAgIG8ubWFpbkltZ1xyXG4gICAgICAgIC5jc3Moe1xyXG4gICAgICAgICAgICAnaGVpZ2h0JzogZGF0YS5oLFxyXG4gICAgICAgICAgICAnd2lkdGgnOiAnYXV0bycsXHJcbiAgICAgICAgICAgICd0b3AnOiBkYXRhLnksXHJcbiAgICAgICAgICAgICdsZWZ0Jzogby5tbFxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQub24oJ2NvdW50VG9HbycsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgby5oYXNUb0hpZGUuaGlkZSgpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgcGxheVNvdW5kKHRydWUsJ2NvdW50MScpO1xyXG4gICAgICAgICAgICBpZihvLm51bSA9PSBkYXRhLm51bSkgc29ja2V0LmVtaXQoJ3N0YXJ0Jyx7d2lkdGg6by5tYWluSW1nLndpZHRoKCl9KTtcclxuICAgICAgICB9LDEwMDApO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQub24oJ2ltZ01vdmUnLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIG8uaHVtYW5XYWxrRGlzID0gZGF0YS5kIC8gNTY7IC8vMSBjbSA9IDU2IHB4XHJcbiAgICAgICAgby5odW1hbldhbGtTdGVwID0gTWF0aC5jZWlsKG8uaHVtYW5XYWxrRGlzIC8gMjUpOyAvLzEgc3RlcCA9IDI1Y21cclxuICAgICAgICBvLmltZ01vdmVUaW1lID0gTWF0aC5mbG9vcihvLmh1bWFuV2Fsa0RpcyAqIDIwKTsgLy8xMDAgY20gPSAyIHNlYywgMSBjbSA9IDIwIG1zZWNcclxuICAgICAgICBjb3VudFN0ZXAoKTtcclxuICAgICAgICBvLm1haW5JbWcuYW5pbWF0ZSh7J2xlZnQnOiBkYXRhLmQqLTF9LG8uaW1nTW92ZVRpbWUsZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgc29ja2V0LmVtaXQoJ2ZpbmlzaCcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQub24oJ2ZpbmlzaCcsZnVuY3Rpb24oKXtcclxuICAgICAgICAkKCcuc3RlcDMnKS5mYWRlSW4oKTtcclxuICAgIH0pO1xyXG5cclxuXHJcbi8qXHJcbiAgICAgICBfXyAgICAgICBfX19fX19fLlxyXG4gICAgICB8ICB8ICAgICAvICAgICAgIHxcclxuICAgICAgfCAgfCAgICB8ICAgKC0tLS1gXHJcbi4tLS4gIHwgIHwgICAgIFxcICAgXFwgICAgXHJcbnwgIGAtLScgIHwgLi0tLS0pICAgfCAgIFxyXG4gXFxfX19fX18vICB8X19fX19fXy8gICAgXHJcblxyXG4qL1xyXG4gICAgJCh3aW5kb3cpLmxvYWQoZnVuY3Rpb24oKXtcclxuICAgICAgICBzaG93TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgJChcImF1ZGlvXCIpLmVhY2goZnVuY3Rpb24oaSwgZSl7XHJcbiAgICAgICAgICAgICQoZSkuZ2V0KDApLnBsYXkoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKFwiYXVkaW9cIikuZWFjaChmdW5jdGlvbihpLCBlKXtcclxuICAgICAgICAgICAgICAgIGlmKCQoZSkucHJvcCgnaWQnKSA9PSAnYnV0dG9uJykgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1ZGlvID0gJChlKS5nZXQoMCk7XHJcbiAgICAgICAgICAgICAgICBhdWRpby5wYXVzZSgpO1xyXG4gICAgICAgICAgICAgICAgYXVkaW8ubXV0ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSwgMzAwKTtcclxuICAgIH0pO1xyXG4gICAgJCgnLnN1Ym1pdCcpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcGxheVNvdW5kKHRydWUsJ2NvdW50MScpO1xyXG4gICAgICAgIHNvY2tldC5lbWl0KCdpbWdSZWFkeScse3VybDokKCcuaW1nVXJsJykudmFsKCl9KTtcclxuICAgIH0pO1xyXG4gICAgJCgnLndyYXBwZXIgLndvcmQnKS5jbGljayhmdW5jdGlvbigpe1xyXG4gICAgICAgIHNvY2tldC5lbWl0KCdjb3VudFRvR28nKTtcclxuICAgIH0pO1xyXG4gICAgJCgnLmJhY2snKS5jbGljayhpbml0KTtcclxuICAgICQoJy5hZ2FpbicpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc29ja2V0LmVtaXQoJ2ltZ1JlYWR5Jyx7dXJsOiQoJy5pbWdVcmwnKS52YWwoKX0pO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2hvd0xvYWRpbmcoX3Qpe1xyXG4gICAgICAgIGlmKF90KSAkKCcubG9hZGluZycpLmFkZENsYXNzKCdvbicpLmZhZGVJbigpO1xyXG4gICAgICAgIGVsc2UgJCgnLmxvYWRpbmcnKS5yZW1vdmVDbGFzcygnb24nKS5mYWRlT3V0KCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBwbGF5U291bmQoX3QsX3R4dCl7XHJcbiAgICAgICAgaWYoX3Qpe1xyXG4gICAgICAgICAgICB0cnl7JChcIiNcIitfdHh0KVswXS5wbGF5KCk7fWNhdGNoKGVycil7fVxyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0cnl7JChcIiNcIitfdHh0KVswXS5wYXVzZSgpO31jYXRjaChlcnIpe31cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBpbml0VG9TdGFydCgpe1xyXG4gICAgICAgIG8uaGFzVG9IaWRlLnNob3coKTtcclxuICAgICAgICAkKCcuc3RlcDMnKS5oaWRlKCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBpbml0KCl7XHJcbiAgICAgICAgJCgnLnN0ZXAzJykuZmFkZU91dCgpO1xyXG4gICAgICAgICQoJy5zdGVwMScpLmZhZGVJbigpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY291bnRTdGVwKCl7XHJcbiAgICAgICAgby5odW1hbldhbGtTdGVwIC09MTtcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIGlmKG8uaHVtYW5XYWxrU3RlcD4wKXtcclxuICAgICAgICAgICAgICAgIGNvdW50U3RlcCgpO1xyXG4gICAgICAgICAgICAgICAgcGxheVNvdW5kKHRydWUsJ2NvdW50MScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSw1MDApO1xyXG4gICAgfVxyXG5cclxufSkvL3JlYWR5IGVuZFxyXG5mdW5jdGlvbiBnZXRVcmxWYXJzKCl7XHJcbiAgICB2YXIgdmFycz1bXSxoYXNoO3ZhciBoYXNoZXM9d2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignPycpKzEpLnNwbGl0KCcmJyk7XHJcbiAgICBmb3IodmFyIGk9MDtpPGhhc2hlcy5sZW5ndGg7aSsrKXtoYXNoPWhhc2hlc1tpXS5zcGxpdCgnPScpO3ZhcnMucHVzaChoYXNoWzBdKTt2YXJzW2hhc2hbMF1dPWhhc2hbMV19XHJcbiAgICByZXR1cm4gdmFyc1xyXG59XHJcbiJdfQ==
